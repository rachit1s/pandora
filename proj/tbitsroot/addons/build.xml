<project name="addons" default="jar" >
	<property name="tbitsroot.dir" value=".." />
        <property name="changeLogsFile" value="changeLogs.txt" />
        <property name="completeLogsFile" value="completeLogs.txt" />
        <property name="svnRevisionFile" value="svnRevision.txt" />
        <property name="oldSvnRevisionFile" value="oldSvnRevision.txt" />
        <property name="svnInfoFile" value="svnInfo.txt" />
        <property name="oldSvnInfoFile" value="svnInfo.txt" />

	<property file="build.properties" />
	
	<path id="project.classpath">
		<fileset dir="${tbits.libs}/" includes="**/*.jar"/>
		<pathelement location="${tbits.classes}/" />
		<!-- fileset dir="${tbits.classes}/" includes="**/*.class" / -->
		<path refid="additional-path" />
	</path>	

        <property name="svn.path" value="${basedir}/${project.name}" />
        <echo message="svn.path=${svn.path}" />
        <typedef resource="com/googlecode/svntask/svntask.xml">
                <classpath>
                        <fileset dir="${tbitsroot.dir}/svntask/lib">
                                <include name="svnkit.jar" />
                                <include name="svntask.jar" />
                        </fileset>
                </classpath>
        </typedef>

<target name="svn-info">
                <svn>
                        <info path="${svn.path}" revisionProperty="revision" repositoryRootUrlProperty="repositoryRootUrl" authorProperty="author" committedDateProperty="commitedDate" committedRevisionProperty="committedRevision" urlProperty="url" />
                </svn>
                <copy file="${svnInfoFile}" tofile="${oldSvnInfoFile}" force="true" failonerror="false"/>
                <echo message="copy finished." />
                <echo file="${svnInfoFile}" message="revision=${revision} ${line.separator}repositoryRootUrl=${repositoryRootUrl} ${line.separator}last_commit_by_author=${author} ${line.separator}commitedDate=${commitedDate} ${line.separator}committedRevision=${committedRevision} ${line.separator}url=${url}"
                />
                <echo message="${svnInfoFile} created." />
        </target>

        <target name="svn-revision" depends="svn-info">
                <loadfile srcFile="${oldSvnRevisionFile}" property="old_svn_revision" failonerror="false" />
                <copy file="${svnRevisionFile}" tofile="${oldSvnRevisionFile}" force="true" failonerror="false"/>
                <echo file="${svnRevisionFile}" message="${committedRevision}" />
        </target>

        <target name="svn-logs" depends="svn-revision">
                <svn>
                        <log startRevision="${old_svn_revision}" endRevision="${committedRevision}" includeMergedRevisions="true" logProperty="changeLogs" path="${svn.path}" />
                </svn>

                        <echo file="${changeLogsFile}" message="${changeLogs}" />
                <svn>
                        <log discoverChangedPaths="true" startRevision="0" endRevision="${committedRevision}" includeMergedRevisions="true" logProperty="completeLogs" path="${svn.path}" />
                </svn>
                        <echo file="${completeLogsFile}" message="${completeLogs}" />
        </target>


	<path id="additional-path" />
	<!-- echo message="${toString:project.classpath}"  / -->	
	<echoproperties/>
	<target name="define">
	</target>
	<target name="compile" depends="define" >
		<delete dir="${output.folder}" />
		<mkdir dir="${output.folder}" />
		<javac 
		    debug="on"
	            debuglevel="source,lines,vars"
        	    optimize="true"
		    srcdir="${src.folder}" destdir="${output.folder}" source="1.6" target="1.6" failonerror="true">
			<classpath refid="project.classpath" /> 
		</javac>	
		<!-- copy all other files  -->
		<copy todir="${output.folder}" >
			<fileset dir="${src.folder}" />
		</copy>
	</target>
	<target name="jar" depends="compile" >
		<delete file="${output.base}/${project.name}.jar" />
		<jar destfile="${output.base}/${project.name}.jar" basedir="${output.folder}" manifest="${output.folder}/MANIFEST.TXT" strict="warn"/>
	</target>

	<target name="release" depends="svn-logs,jar">
	</target>	

</project>
