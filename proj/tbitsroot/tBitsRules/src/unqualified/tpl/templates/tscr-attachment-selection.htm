<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<style type="text/css">
/*margin and padding on body element
  can introduce errors in determining
  element position and are not recommended;
  we turn them off as a foundation for YUI
  CSS treatments. */
body {
	margin:0;
	padding:0;
}
</style>

<script type="text/javascript" src="<%=nearestPath%>web/yui/build/yahoo/yahoo-min.js"></script> 
<script type="text/javascript" src="<%=nearestPath%>web/scripts/common.js"></script>
<script type="text/javascript" src="<%=nearestPath%>web/scripts/search.js"></script>
<script language="javascript">                
	YAHOO.namespace("transbit.tbits");
	YAHOO.transbit.tbits.contextPath = "<%=nearestPath%>";       
 </script> 

 <script type="text/javascript"> 
/*
 * This method returns list of values for each row in the table and particular column
 */
 //var tableData = [{request_id:1, doc_no:2, ref_no:3, desp:'whatever',action:'client',sl_no:4,copies:1},
 //		 {request_id:11, doc_no:22, ref_no:33, desp:'whichever',action:'field',sl_no:45,copies:1}];
  	var request = <%=tableData%>;
    var tableData = eval (request);       
                
    function getParameters()
    {	
    	var url = "&to="+getValue("letterType")+"&actionList="+createList("actionfor",tableData.length)+"&copiesList="+createList("copies",tableData.length)
    					+"&deliverableList=" + encodeURIComponent(getAttachmentList(tableData,"deliverable"))
    					+"&attachmentList=" + encodeURIComponent(getAttachmentList(tableData,"other-attachment"));
    	return url;
    } 	
			
	function createList(fieldname,length)
	{
		var list = '';
		for (var i = 0; i <length; i++){
		var val = getValue(fieldname+i);
		
		if ((val=='') || (val== null) || val ==' ')
			val= '-';
					
		if (i==0)
		   list = val;		   
		else
		   list = list+"," + val;
		}
		return list;
	}      
   		
   	function hideDiv()
	{		
		document.getElementById("letters").style.display='none';
		//document.getElementById("transmittalnote").style.display='inline';		
	}
   
    function transmittalPanel()
    {   
		var finalurl = "<%=nearestPath%>transmittal?requestType=preview&ba=<%=sysPrefix%>&requestList=<%=requestList%>" + getParameters();
		window.open(finalurl,"_self","resizable=yes, toolbar=yes, location=yes, status=yes,  scrollbars=yes, menubar=yes, copyhistory=yes");
    }	 
    	
	function fillTable()
    {	
	var tbodyElem = document.getElementById("lettersTbody");
	var trElem, tdElem, txtNode;	
	var serialNo = 0;
	var length = tableData.length;
	attachmentCount = new Array(length);
	for (var j = 0; j < length; j++) {	
	   trElem = tbodyElem.insertRow(tbodyElem.rows.length);
	   trElem.className = "tr" + (j%2);
	
	   serialNo = serialNo + 1;
	   tdElem = trElem.insertCell(trElem.cells.length);
	   tdElem.className = "col0";
	   txtNode = document.createTextNode(serialNo);
	   tdElem.appendChild(txtNode);
		   
	   tdElem = trElem.insertCell(trElem.cells.length);
	   tdElem.className = "col1";
	   txtNode = document.createTextNode(tableData[j].doc_no);
	   tdElem.appendChild(txtNode);
		
	   tdElem = trElem.insertCell(trElem.cells.length);
	   tdElem.className = "col2";
	   txtNode = document.createTextNode(tableData[j].rev_no);
	   tdElem.appendChild(txtNode);
	
	   tdElem = trElem.insertCell(trElem.cells.length);
	   tdElem.className = "col3";
	   txtNode = document.createTextNode(tableData[j].desp);
	   
	   tdElem.appendChild(txtNode);		   		   
	   tdElem = trElem.insertCell(trElem.cells.length);
	   tdElem.className = "col4";
	   txtNode = document.createElement('select');	
	   txtNode.setAttribute('id', "actionfor"+j);
	   txtNode.setAttribute('name', "actionfor"+j);  
	   optValue = [{name:"A: Approval" , value:"A"},
	   	       {name:"B: Final Approval" , value:"B"},
	   	       {name:"C: Information only" , value:"C"},
			   {name:"D: For Refrence" , value:"D"}];
	   for (var index = 0;index<optValue.length ; index++)
	   {
	   var option = document.createElement ('option');	   	
	   option.text = optValue[index].name;
	   option.value = optValue[index].value;
	   try {
		txtNode.add (option ,null);
	   }
	   	catch (exp){
	   		txtNode.add(option);
	   	}
	   }
	   txtNode.style.width ="10em";  
	   tdElem.appendChild(txtNode);
		  
	   tdElem = trElem.insertCell(trElem.cells.length);
	   tdElem.className = "col5";
	   txtNode = document.createElement('input');
	   txtNode.setAttribute('id', "copies"+j);
	   txtNode.setAttribute('name', "copies"+j);
	   txtNode.style.width ="2em"; 
	   tdElem.appendChild(txtNode);
	   
	   tdElem = trElem.insertCell(trElem.cells.length);
	   tdElem.className = "col6";
	   var actionAttachment = tableData[j].deliverables;	  
	   for (attIndex = 0; attIndex< actionAttachment.length; attIndex++){   
		   var attachmentDname = actionAttachment[attIndex].attDnameList.split(",");	  
		   var attachmentName = actionAttachment[attIndex].attNameList.split(",");
		   if (attachmentDname != "")
		   {		  
			   for (i = 0; i < attachmentDname.length; i++)
			   {
					txtNode = document.createElement('input');
					txtNode.setAttribute('type', "checkbox");
					txtNode.setAttribute('id', "deliverable"+j+attIndex+i);
					txtNode.setAttribute('name', attachmentName[i]);										
					tdElem.appendChild(txtNode);
					txtNode.defaultChecked = true; 
					txtNode.checked = 1;
					
					txtNode = document.createTextNode (attachmentDname[i])
					tdElem.appendChild (txtNode);
					txtNode = document.createElement('br');					
					tdElem.appendChild(txtNode);
					
					txtNode = document.createTextNode ("Rev:" + actionAttachment[attIndex].revisionNumber);
					revElem = document.createElement ('span');
					revElem.style.color = "red";
					revElem.appendChild (txtNode);
					
					txtNode = document.createTextNode (" Date: "+ actionAttachment[attIndex].dateTime);	
					dateElem = document.createElement ('span');
					dateElem.appendChild (txtNode);
									
					spanElem = document.createElement ('span');			
					spanElem.appendChild (revElem);	
					spanElem.appendChild (dateElem);				
					tdElem.appendChild(spanElem);
					
					txtNode = document.createElement('br');					
					tdElem.appendChild(txtNode);
				}	
			}
		}
				  
	   tdElem = trElem.insertCell(trElem.cells.length);
	   tdElem.className = "col7"; 
	   var actionAttachment = tableData[j].attachments;	  
	   for (attIndex = 0; attIndex< actionAttachment.length; attIndex++){   
		   var attachmentDname = actionAttachment[attIndex].attDnameList.split(",");	  
		   var attachmentName = actionAttachment[attIndex].attNameList.split(",");
		   if (attachmentDname != "")
		   {		  
			   for (i = 0; i < attachmentDname.length; i++)
			   {
					txtNode = document.createElement('input');
					txtNode.setAttribute('type', "checkbox");
					txtNode.setAttribute('id', "other-attachment"+j+attIndex+i);
					txtNode.setAttribute('name', attachmentName[i]);										
					tdElem.appendChild(txtNode);
					txtNode.defaultChecked = true; 
					txtNode.checked = 1;
					
					txtNode = document.createTextNode (attachmentDname[i])
					tdElem.appendChild (txtNode);
					txtNode = document.createElement('br');					
					tdElem.appendChild(txtNode);
					
					txtNode = document.createTextNode ("Rev:" + actionAttachment[attIndex].revisionNumber);
					revElem = document.createElement ('span');
					revElem.style.color = "red";
					revElem.appendChild (txtNode);
					
					txtNode = document.createTextNode (" Date: "+ actionAttachment[attIndex].dateTime);	
					dateElem = document.createElement ('span');
					dateElem.appendChild (txtNode);
									
					spanElem = document.createElement ('span');			
					spanElem.appendChild (revElem);	
					spanElem.appendChild (dateElem);				
					tdElem.appendChild(spanElem);
					
					txtNode = document.createElement('br');					
					tdElem.appendChild(txtNode);
				}	
			}
		  } 
		  
	   }
    }	


	function getAttachmentList (tableData, attachmentType) {
		var emptystring = "";
		var reqAttachmentList = emptystring;
		var actionAttachmentList = emptystring;		
		for (j=0; j<tableData.length; j++) {			
			actionAttachmentList = emptystring;					
			var actionAttachment = "";
			if (attachmentType == "other-attachment")
				actionAttachment = tableData[j].attachments;
			else
				actionAttachment = tableData[j].deliverables;
				
			for (attIndex = 0; attIndex< actionAttachment.length; attIndex++) {	
				//Get the length(number of attachments) in each action  
				var actionAttachmentDNames = actionAttachment[attIndex].attDnameList;
				if (actionAttachmentDNames != emptystring) {					   
					for (i = 0; i < actionAttachmentDNames.split (",").length; i++) {
						var chBoxField = document.getElementById (attachmentType+j+attIndex+i);
						if((chBoxField == "undefined") || (chBoxField == null)){
							actionAttachmentList = 	(actionAttachmentList == emptystring) ?
														";" : actionAttachmenList + ";" + emptystring;
						}
						else{
							if (chBoxField.checked) {
								actionAttachmentList= (actionAttachmentList == emptystring) ? 
															chBoxField.name : actionAttachmentList + ";" + chBoxField.name;						
							}
						}
			   		}				   
				}					
			}
			if (actionAttachmentList == emptystring)
				actionAttachmentList = " ";
			reqAttachmentList = (reqAttachmentList == emptystring)? 
									actionAttachmentList : reqAttachmentList + "," + actionAttachmentList;				
		}
		return reqAttachmentList;
	}	
/*
	function getAttachmentList (tableData, attachmentType) {
		var emptystring = "";
		var reqAttachmentList = emptystring;
		var actionAttachmentList = emptystring;		
		for (j=0; j<tableData.length; j++) {			
			actionAttachmentList = emptystring;					
			var actionAttachment = "";
			if (attachmentType == "attachments")
				actionAttachment = tableData[j].attachments;
			else
				actionAttachment = tableData[j].deliverables;
				
			for (attIndex = 0; attIndex< actionAttachment.length; attIndex++) {	
				//Get the length(number of attachments) in each action  
				var actionAttachmentDNames = actionAttachment[attIndex].attDnameList;
				if (actionAttachmentDNames != emptystring) {					   
					for (i = 0; i < actionAttachmentDNames.split (",").length; i++) {
						var chBoxField = document.getElementById (attachmentType+j+attIndex+i);
						if((chBoxField == 'undefined') || (chBoxField == null))
							actionAttachmentList = 	(actionAttachmentList == emptystring) ?
														emptystring : actionAttachmenList + "," + emptystring;
						else{
							if (chBoxField.checked) {
								actionAttachmentList= (actionAttachmentList == emptystring) ? 
															chBoxField.name : actionAttachmentList + ";" + chBoxField.name;						
							}
						}
			   		}				   
				}				
			}	
			reqAttachmentList = (reqAttachmentList == emptystring)? 
									actionAttachmentList : reqAttachmentList + "," + actionAttachmentList;				
		}
		return reqAttachmentList;
	}	*/
	
	function getAttachmentListPrev(tableData){
		var attachmentList = "";
		var fieldList = "";
		
		for (j=0; j<tableData.length; j++)
		{			
			fieldList = ""; 			
			var actionAttachment = tableData[j].attachments;
			for (attIndex = 0; attIndex< actionAttachment.length; attIndex++)
			{				 
				var attachmentDname = actionAttachment[attIndex].attDnameList.split(",");	  				
				if (attachmentDname != "")
				{					   
				   for (i = 0; i < attachmentDname.length; i++)
				   {
						var chBoxField = document.getElementById ("attachment"+j+attIndex+i);				
						if (chBoxField.checked)
						{
							if (fieldList == ""){
								fieldList = chBoxField.name;
							}
							else{
								fieldList = fieldList + ";" + chBoxField.name;					
							}
						}
				   }				   
				}				
			}	
			if (attachmentList == ""){
				attachmentList = fieldList;
			}
			else{
				attachmentList = attachmentList + "," + fieldList;
			}			
		}
		return attachmentList;
	}
	
  </script>
</head>

<body onload="fillTable()" bgcolor = #E6F4FD>	 
	<div>
	    <div id="letters" style="display:inline"> 		           
			<div> 
		        <div><p style="font-weight:bold;text-align:center"> Choose transmittal letter type&nbsp;</p></div>
		        <div>
		        	<div>To:&nbsp;
			        	<span><select id="letterType" name="letterType" size="1" style="width: 75px; vertical-align: middle; font-size: 80%; font-weight: normal;">				        	
			        		<option value= "Client">Client</option>
							<option value= "Field">Field</option>											
							</select>	
						</span>						
					</div>  
					<br />					
					<div class="selected" style="font-size: 14px; font-style: normal; font-variant: normal; text-transform: none; font-family: &quot;Verdana New&quot;">
					    <div class="tableWrapper">
							<style type="text/css">
								table {width:95%;}
								.tableWrapper {text-align:left}
								.tr0 {background-color:#FFFFFF;}
								.tr1 {background-color:#FFFFFF;}
								.col0 {width:5%;text-align:center; border: solid 1px #000000; border-right: none; border-left: none}
								.col1 {width:20%;text-align:center; border: solid 1px #000000; border-right: none}
								.col2 {width:10%;text-align:center; border: solid 1px #000000; border-right: none;}
								.col3 {width:40%;text-align:center; border: solid 1px #000000; border-right: none;}
								.col4 {width:2%;text-align:center; border: solid 1px #000000;  border-right: none;}
								.col5 {width:2%;text-align:center; border: solid 1px #000000; border-right: none;}
								.col6 {width:10%;text-align:center; border: solid 1px #000000; border-right: none;}
								.col7 {width:10%;text-align:left; border: solid 1px #000000;}
							</style>
							<table id="lettersTable" align="center" style="border:solid 1px #000000; width:100%; border-collapse: collapse">
							   <thead style = "font-weight: bold" style= "background-color:#BDCEE6">							       
									<td class="mht l" style="text-align:center; height: 21px; border: solid 1px #000000; border-right: none; border-left: none; border-top: none">SL. No.</td>
									<td class="mht l" style="text-align:center; height: 21px; border: solid 1px #000000; border-right:none; border-top: none">Document Name</td>
									<td class="mht l" style="text-align:center; height: 21px; border: solid 1px #000000; border-right: none; border-top: none">Rev. No.</td>
									<td class="mht l" style="text-align:center; height: 21px; border: solid 1px #000000; border-right: none; border-top: none">Description</td>
									<td class="mht l" style="text-align:center; height: 21px; border: solid 1px #000000; border-right: none; border-top: none">Action for</td>	
									<td class="mht l" style="text-align:center; height: 21px; border: solid 1px #000000; border-right: none; border-top: none">No. of copies</td>
									<td class="mht l" style="text-align:center; height: 21px; border: solid 1px #000000; border-right: none; border-top: none">TPL Attcahments</td>
									<td class="mht l" style="text-align:center; height: 21px; border: solid 1px #000000; border-right: none; border-top: none">Other Attachments</td>
							   </thead>
							   <tbody id="lettersTbody">							   	
							   </tbody>							   
							</table>
						</div>	
						<br/>
						<br/>	
							<div><u>Action codes:</u>
							     <br/>A: Submitted for Approval
							     <br/>B: Submitted for Final Approval
							     <br/>C: For information only
							</div>				
						</div> 		
						<div align="right">
							<input name="preview" type="button" value="Preview" align="bottom" onclick="transmittalPanel();"/>
							<input name="cancel" type="button" value="Cancel" align="bottom" onclick="window.close();"/>							
						</div>				    	 			    	    
		         	</div>				  
			</div> 	 
	    </div>
	</div>
</body>
</html>
