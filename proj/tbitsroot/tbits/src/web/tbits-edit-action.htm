<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
    <head>
        <meta content="text/html; charset=UTF-8" http-equiv="content-type">
        <meta name="GENERATOR" content="Microsoft Visual Studio .NET 7.1">
        <meta name="vs_targetSchema" content="http://schemas.microsoft.com/intellisense/ie5">
        <title>Modify Update#<%=actionId%></title>
        <link rel="stylesheet" href="<%=nearestPath%>web/css/<%=cssFile%>" />
        <script language="javascript" src="<%=nearestPath%>web/scripts/common.js"></script>
        <script type="text/javascript" src="<%=nearestPath%>web/yui/build/yahoo/yahoo-min.js"></script>
	<script language="javascript">
		YAHOO.namespace("transbit.tbits");
	    	YAHOO.transbit.tbits.contextPath = "<%=nearestPath%>";
        </script>
    </head>
    <body class="dialog" onload="onLoadBody()" onkeydown="onKeyDownBody(event)">
		<div style="height: 0px;display:none">
           <iframe id='hiddenIFrame' name='hiddenIFrame' style="display:none" onload="onIframeBodyLoad()"></iframe>
        </div>
        <input type="hidden" id="sysPrefix" name="sysPrefix" value="<%=sysPrefix%>" /> 
        <input type="hidden" id="requestId" name="requestId" value="<%=requestId%>" />
        <input type="hidden" id="actionId" name="actionId" value="<%=actionId%>" /> 
        <input type="hidden" id="attList" name="attList" value="" />
        <table width="100%" cellpadding="0" cellspacing="0">
            <tr>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td class="sx b">Description:</td>
            </tr>
            <tr>
                <td>
                    <textarea class="sx ff" id="description" name="description" rows="20" style="width: 100%" <%=descDisabled%>><%=description%></textarea>
                </td>
            </tr>
            <tr>
                <td>&nbsp;</td>
            </tr>
            <tr id="trAttach" style="display: <%=showAttachments%>">
                <td>
                    <span class="sx b" style="z-index: 4">Attachments</span>
                    <div id="divAttach" style="overflow: auto; display: block; height: <%=height%>px">
                        <table class="ea" cellpadding="0" cellspacing="0" width="100%">
                            <colgroup>
                                <col class="sx" width="10%" align="right" />
                                <col class="sx" width="90%" align="left" />
                            </colgroup>
                            <tbody id="attTable">
                                <tr>
                                    <TH>Remove</TH>
                                    <TH>Attachment</TH>
                                </tr>
                                <%=attachmentList%>
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>
            <tr>
                <td>&nbsp;</td>
            </tr>
            <tr>
                <td align="right">
                    <input type="button" name="btnSubmit" id="btnSubmit" value="Save Changes" class="cw b bn sxs lsb"
                        onclick="onSubmit()" /> <input type="button" name="btnCancel" id="btnCancel" value="Cancel" class="sxs lsb" onclick="onCancel()" />
                </td>
            </tr>
        </table>
    </body>
    <script language="javascript">
		var args = window.dialogArguments; 
			
        /**
         * This method adjusts the height of the dialog based on the attachment DIV.
         */
        function onLoadBody()
        {
            var atr = document.getElementById("trAttach");
            // Check if the TR that holds the attachments is present.
            if (atr != null)
            {
                var disp = atr.style.display;
                
                // Check if the Div is present.
                var dtr = document.getElementById("divAttach");
                if (dtr != null)
                {
                    // Get the height of the div and remove the px from it.
                    var height = dtr.style.height;
                    if (height.indexOf("px") > 0)
                    {
                        // Standard height is 510px, Add the height of div to this.
                        height = height.replace("px", "");
                        height = Number(height) + 510;
                        // Set the height of Dialog.
                        if (document.all)
                        {
                            window.dialogHeight =  height + "px";
                        }
                        else
                        {
                            window.resizeTo(620, height);
                        }
                    }
                }
            }
        }
        
        /**
         * Dispose the window on <Esc>
         */
        function onKeyDownBody(e)
        {
            var event = (document.all) ? window.event : e;
            var keyCode = (document.all) ? event.keyCode : e.which;
            if (keyCode == 27)
            {
                onCancel();
            }
        }
        
        /**
         * Method that is called when a checkbox is checked or unchecked.
         */
        function count(id)
        {
            var ctrl = document.getElementById("attList");
            if (ctrl == null) return;
            var list = ctrl.value;
            // Check if the id is already present in the list.
            if (isPresent(list, id) == false)
            {
                // If not, add the id to the list.
                if (trim(list) == "")
                {
                    list = id;
                }
                else
                {
                    list = list + "," + id;
                }
            }
            else
            {
                // Remove it from the list.
                list = remove(list,id);
            }
            
            // Set the value of hidden variable to the latest value.
            ctrl.value = list;
        }
        
        /** 
         * This method checks if the given value is present in the given Comma separated list.
         */
        function isPresent(list, value)
        {
            var arr = list.split(",");
            for(var i = 0; i< arr.length; i++)
            {
                var item = trim(arr[i]);
                if (item == null || item == "") continue;
                if (item == value) return true;
            }    
            return false;
        }

        /** 
         * This method removes the given value from the given Comma separated list and returns the final list.
         */
        function remove(list, value)
        {
            var arr = list.split(",");
            var val = "";
            for(var i = 0; i< arr.length; i++)
            {
                var item = trim(arr[i]);
                if (item == null || item == "") continue;
                if (item == value) continue;
                if (val == "")
                    val = item;
                else
                    val = val + "," + item;
            }    
            return val;
        }

        /** 
         * Handler on submitting the form. Posts a request to the server using XMLHttp.
         */
        function onSubmit()
        {
			 var sysPrefix = document.getElementById("sysPrefix").value;
            var requestId = document.getElementById("requestId").value;
            var actionId  = document.getElementById("actionId").value;
            var attList = document.getElementById("attList").value;
            
            var desCtrl = document.getElementById("description");
            var description = desCtrl.value;

			 // Create a dynamic form and set its target to hidden Iframe and submit.
             var obj1 = document.createElement("form");
			 obj1.name="dymForm";
			 obj1.id="dymForm";
			 obj1.target="hiddenIFrame";
			 obj1.action = "<%=nearestPath%>edit-action/"  + sysPrefix;
		     obj1.method="post";
			 obj1.appendChild(createObject("sysPrefix", sysPrefix));
			 obj1.appendChild(createObject("requestId",requestId));
			 obj1.appendChild(createObject("actionId", actionId));
    		 obj1.appendChild(createObject("attachments", attList));	
    			 
    		var desc = document.createElement("textarea");
			desc.name= "description";
			desc.value= description;
    		 
    		 obj1.appendChild(desc);
    		 document.body.appendChild(obj1);
    		 dymForm.submit();
    		 document.body.removeChild(obj1);  
    		      
        }
        
        function onIframeBodyLoad()
    		{ 
    			var output = window.frames["hiddenIFrame"].document.body.innerHTML;
    			
    			if (output == '')
					return;
				
				var sysPrefix = document.getElementById("sysPrefix").value;
                var requestId = document.getElementById("requestId").value;
				var requestUrl = "<%=nearestPath%>q/" + sysPrefix + "/" + requestId;
             	  
				if(output.indexOf("true") >= 0)
                {
					window.close();
				    if (document.all)
					  {
						 args.returnValue = 1;
					  }
					 else 
					  {
						if (window.opener != null)
							{
								window.close();
								window.opener.location = requestUrl;
				            }
				        else
						{
							window.location = requestUrl;
						}		
					 } 
					  return;
				}
               else
				{
                alert("Edit action could not be completed due to a database error.");
                return;
				 }
          }
        
        /**
         * Handler called on clicking the cancel button.
         */
        function onCancel()
        {
            window.close();
            return;
        }
    </script>
</html>
