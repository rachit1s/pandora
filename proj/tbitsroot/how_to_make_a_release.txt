How to make a release of TBits

Notes : 

Following instruction are only for Unix or Linux operating system only.

Following instructions are not for layman. The person who wants to create a release should be experienced in Unix/Linux administration or should have a decent amount of knowledge about it. The person is expected to know the details of java, ant, svn and rsync. The person making a release is expected to be a developer of tbits or has experience in handling tbits installation and code for some time. The instructions are verbose and self explanatory. In case of error please try to solve yourself.

Here the 'tbitsroot' is the folder where the complete code of tBits is checked out.
The term 'clientName' is referred for the code name of the client like 'lnt' for Larsen And Toubro. which is used throughout tbits for creating custom
plugins. All client specific plugins will be kept in the folder 'clientName'. Custom build.properties are assumed to be already present.

1. run 'cd tbitsroot'
2. run 'svn update'
3. run 'svn status' -- see if you have any uncomitted data in the source files. Commit any uncommitted data in your checkout or run 'svn revert .' to revert all the uncommitted changed data.
Otherwise take a complete fresh checkout of tbitsroot from the tBits svn server
4. run 'cd gwtplugins'
5. run 'cp build.properties.common build.properties' -- this will specifies to copy all the plugins in folder common to the ../tbits/jaguar/jaguarsource/plugins folder. Do read all the files associated before executing this
6. run 'ant' -- to do the actual copy.
7. if your release is for a client which has custom gwtplugins like 'lnt' then we have to the following sub steps to copy them also. lets say we have to make a release for lnt which has custom gwtplugins in lnt folder. We have already created a build.properties.lnt property for this client. For this case 'clientName' should be replaced by the word 'lnt'
	7.1. run 'cp build.properties.clientName build.properties'
	7.2. run 'ant' -- now the plugins in the lnt folder will also get copied into the ../tbits/jaguar/jaguarsource/plugins
8. run 'cd ../tbits'
9. run 'ant release -Dsystype=dms' -- This will create a jar file in the ../tbitsroot/tbits-releases/ReleaseNumber directory. where release number is the svn revesion of the tbitsroot folder currently.
10. run cd ../tBitsRules
11. for all the clients the build.properties is already created.
12. run 'cp build.properties.clientName build.properties'
13. run 'ant' -- this will compile the client plugins to the ../tbits/dist/build/plugins folder.
14. run 'cd ../tbits/dist/build/plugins '
15. run 'zip -r clientNamePlugins.zip * '
16. run 'cp clientNamePlugins.zip  ../../../tbits-releases/ReleaseNumber/plugins/' -- create the destination folder if non-existent
17. run 'cd ../../../jaguar/jaguarsource/plugins'
18. run 'zip -r clientNamegwtPlugins.zip *'
19. run 'cp clientNamegwtPlugins.zip ../../../../tbits-releases/ReleaseNumber/gwtPlugins' -- create the destination folder if non-existent
20. now we have to copy complete installation. 
21. run 'cd ../../../'   -- this will take you to tbits folder
22. run './shipplugins2uc.sh clientName /' -- this will ship the tbits to the plugin upgrade server. it will ask for rsync password. You can look what the password is into the same file. run 'cat ./shipplugins2uc.sh' -- if this file is not executable then first make it executable by running 'chmod +x ./shipplugins2uc.sh'
23. run './shippluginsbeta2uc.sh clientName /' -- this will ship the tbits  to the beta plugin upgrade server. it will ask for rsync password. You can look what the password is into the same file. run 'cat ./shippluginsbeta2uc.sh' -- if this file is not executable then first make it executable by running 'chmod +x ./shippluginsbeta2uc.sh'
24. run './shipgwtpluginsbeta2uc.sh clientName /' -- this will ship the tbits gwtplugins to the beta plugin upgrade server. it will ask for rsync password. You can look what the password is into the same file. run 'cat ./shipgwtpluginsbeta2uc.sh' -- if this file is not executable then first make it executable by running 'chmod +x ./shipgwtpluginsbeta2uc.sh'
25. run './shipgwtplugins2uc.sh clientName /' -- this will ship the tbits gwtplugins to the plugin upgrade server. it will ask for rsync password. You can look what the password is into the same file. run 'cat ./shipgwtplugins2uc.sh' -- if this file is not executable then first make it executable by running 'chmod +x ./shipgwtplugins2uc.sh'
26. run './shiptbitsbeta2uc.sh' -- this will ship the tbits installation to the upgrade server. it will ask for rsync password. You can look what the password is into the same file. run 'cat ./shiptbitsbeta2uc.sh' -- if this file is not executable then first make it executable by running 'chmod +x ./shiptbitsbeta2uc.sh'
27. run './shiptbits2uc.sh' -- this will ship the tbits installation to the beta upgrade server. it will ask for rsync password. You can look what the password is into the same file. run 'cat ./shiptbits2uc.sh' -- if this file is not executable then first make it executable by running 'chmod +x ./shiptbits2uc.sh'
28. run 'cd ../tbits-releases/'
29. run 'export USER=$RSYNCUSERNAME' -- where $RSYNCUSERNAME is the rsync  user-name of the release server. currently it is 'transbit'
29. run 'export RSYNC_PASSWORD=$RSYNCPASSWORD' -- where $RSYNCPASSWORD is the rsync password for the release server. currently it is same as that of ugprades server and can be found out from the file 'tbitsroot/tbits/shiptbits2uc.sh'
30. run 'rsync ReleaseNumber upgrades.mytbits.com::releases/ -avz'

This should complete your release process.
