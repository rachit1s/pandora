package corrGeneric.constraints;

import java.util.Hashtable;

import corrGeneric.com.tbitsGlobal.server.interfaces.ICorrConstraintPlugin;
import corrGeneric.com.tbitsGlobal.server.protocol.CorrObject;
import corrGeneric.com.tbitsGlobal.server.util.Utility;
import corrGeneric.com.tbitsGlobal.shared.domain.FieldNameEntry;
import corrGeneric.com.tbitsGlobal.shared.objects.CorrException;
import corrGeneric.com.tbitsGlobal.shared.objects.GenericParams;

/**
 * 
 * @author nitiraj
 *
 * give error if system has to generate number and the number is already present in the field.
 */
public class GenerateCorrConstraint implements ICorrConstraintPlugin{

	@Override
	public void execute(Hashtable<String, Object> params) throws CorrException 
	{
		CorrObject co = (CorrObject) params.get(CORROBJECT);
		String genCorr = co.getAsString(co.getFieldNameMap().get(GenericParams.GenerateCorrespondenceFieldName).getBaFieldName());
		FieldNameEntry cfn = co.getFieldNameMap().get(GenericParams.CorrespondenceNumberFieldName);
		String corrFieldName = null ;
		if( null != cfn )
		 corrFieldName = cfn.getBaFieldName() ;
		String corrNo = null;
		
		corrNo = co.getAsString(corrFieldName);
		if( genCorr.equals(GenericParams.GenerateCorr_BothNumberAndPdf))
		{
			if( null != corrNo && !corrNo.trim().equals(""))
			{
				throw new CorrException("Please remove any number in field " + Utility.fdn(co.getBa(),corrFieldName) + " as it will be generated by system.");
			}
		}
	}

	@Override
	public String getName() {
		return "give error if system has to generate number and the number is already present in the field.";
	}

	@Override
	public double getOrder() {
		return 0;
	}

}
